var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$h1Style = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'padding', _1: '0%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin', _1: '15px'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$h2Style = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'padding', _1: '0%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin', _1: '0%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'font-size', _1: '110%'},
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$Main$projectContentStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'padding', _1: '0 1.5%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'left'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$projectStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'padding', _1: '15px 3% 2px 3%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin', _1: '10px 0%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '10px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border', _1: '0px invisible black'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'background-color', _1: '#E4FEFF'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _user$project$Main$buttonStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '15%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'min-width', _1: '55px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'border-color', _1: 'black'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'white'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '5px'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _user$project$Main$contentStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'left'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin', _1: 'auto'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'width', _1: '90%'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'max-width', _1: '450px'},
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$Main$headerStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin', _1: '20px'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$mainStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'margin', _1: 'auto'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: '80%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'height', _1: '100%'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'min-width', _1: '380px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'max-width', _1: '625px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'white'},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$Main$showProject = function (project) {
	return {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('project'),
				_1: {
					ctor: '::',
					_0: _user$project$Main$projectStyle,
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('project-content'),
						_1: {
							ctor: '::',
							_0: _user$project$Main$projectContentStyle,
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$h2,
							{
								ctor: '::',
								_0: _user$project$Main$h2Style,
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(project.title),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$p,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(project.description),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$p,
									{ctor: '[]'},
									A2(
										_elm_lang$core$List$concatMap,
										function (_p0) {
											var _p1 = _p0;
											return {
												ctor: '::',
												_0: _elm_lang$html$Html$text('('),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$a,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$href(_p1._0),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(_p1._1),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html$text(')'),
														_1: {ctor: '[]'}
													}
												}
											};
										},
										project.links)),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	};
};
var _user$project$Main$content = function (model) {
	var _p2 = model.route;
	switch (_p2.ctor) {
		case 'AboutRoute':
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('content'),
					_1: {
						ctor: '::',
						_0: _user$project$Main$contentStyle,
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$p,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Hi, I\'m Willis'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$p,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('I\'m a software engineer and sometimes poet living in Brooklyn'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$p,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('I work at Kickstarter'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				});
		case 'WritingRoute':
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('content'),
					_1: {
						ctor: '::',
						_0: _user$project$Main$contentStyle,
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$p,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Poetry:'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$ul,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('writing-list'),
								_1: {ctor: '[]'}
							},
							A2(
								_elm_lang$core$List$concatMap,
								function (_p3) {
									var _p4 = _p3;
									return {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$li,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$a,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$href(_p4._0),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text(_p4._1),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									};
								},
								model.writingLinks.poetryLinks)),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$p,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Prose:'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$ul,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('writing-list'),
										_1: {ctor: '[]'}
									},
									A2(
										_elm_lang$core$List$concatMap,
										function (_p5) {
											var _p6 = _p5;
											return {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$li,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$a,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$href(_p6._0),
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(_p6._1),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											};
										},
										model.writingLinks.proseLinks)),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$p,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Misc:'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$ul,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('writing-list'),
												_1: {ctor: '[]'}
											},
											A2(
												_elm_lang$core$List$concatMap,
												function (_p7) {
													var _p8 = _p7;
													return {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$li,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$a,
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$href(_p8._0),
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text(_p8._1),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													};
												},
												model.writingLinks.miscLinks)),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				});
		case 'PortfolioRoute':
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('content'),
					_1: {
						ctor: '::',
						_0: _user$project$Main$contentStyle,
						_1: {ctor: '[]'}
					}
				},
				A2(_elm_lang$core$List$concatMap, _user$project$Main$showProject, model.projectDescriptions));
		case 'ContactRoute':
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('content'),
					_1: {
						ctor: '::',
						_0: _user$project$Main$contentStyle,
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$p,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('You can find me on '),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$a,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$href('https://github.com/willisplummer'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Github'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html$text(' and '),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$a,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$href('https://twitter.com/willisplummer'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Twitter'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$p,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('I\'m also on '),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$a,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$href('https://www.linkedin.com/in/willisplummer'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('LinkedIn'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html$text(' and '),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$a,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$href('https://willisplummer.tumblr.com'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Tumblr'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$p,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$a,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$href('mailto:willisplummer@gmail.com'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Email'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html$text(' is the best way to get in touch'),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}
					}
				});
		default:
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('content'),
					_1: {
						ctor: '::',
						_0: _user$project$Main$contentStyle,
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('NOT FOUND'),
					_1: {ctor: '[]'}
				});
	}
};
var _user$project$Main$nav = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(
			_elm_lang$core$List$intersperse,
			_elm_lang$html$Html$text(' | '),
			A2(
				_elm_lang$core$List$concatMap,
				function (_p9) {
					var _p10 = _p9;
					return {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('button'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_p10._1),
									_1: {
										ctor: '::',
										_0: _user$project$Main$buttonStyle,
										_1: {ctor: '[]'}
									}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(_p10._0),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					};
				},
				model.nav)));
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$body,
		{
			ctor: '::',
			_0: _user$project$Main$mainStyle,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('header'),
					_1: {
						ctor: '::',
						_0: _user$project$Main$headerStyle,
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h1,
						{
							ctor: '::',
							_0: _user$project$Main$h1Style,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Willis Plummer'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _user$project$Main$nav(model),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: _user$project$Main$content(model),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$projects = {
	ctor: '::',
	_0: {
		title: 'This Portfolio Site',
		description: '\n                        This single-page portfolio site was built using Elm.\n                        It implements the Navigation and URLparser packages to handle routing.\n                        ',
		links: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'https://github.com/willisplummer/elm-personal-website', _1: 'github'},
			_1: {ctor: '[]'}
		}
	},
	_1: {
		ctor: '::',
		_0: {
			title: 'MTA Bus Times App for Amazon Echo',
			description: '\n                        This ruby app runs on Sinatra and enables the Amazon Echo to\n                        let you know when the next bus will arrive via the MTA\'s Bus Time API.\n                        ',
			links: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'https://github.com/willisplummer/mta_alexa_app', _1: 'github'},
				_1: {ctor: '[]'}
			}
		},
		_1: {
			ctor: '::',
			_0: {
				title: 'Western Beefs of North America',
				description: '\n                        This is a poetry and prose website that I edited in 2014 and 2015.\n                        I built a Rails CMS to simplify the process of adding new content.\n                        ',
				links: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'http://westernbeefs.com/', _1: 'site'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'https://github.com/willisplummer/westernbeefs', _1: 'github'},
						_1: {ctor: '[]'}
					}
				}
			},
			_1: {ctor: '[]'}
		}
	}
};
var _user$project$Main$misc = {
	ctor: '::',
	_0: {ctor: '_Tuple2', _0: 'http://dadsofshutterstock.tumblr.com', _1: 'dads of shutterstock'},
	_1: {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'http://twitter.com/willisunedited', _1: '@willisunedited'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'http://twitter.com/willisdepressed', _1: '@willisdepressed'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'http://muumuuhouse.com/wp.twitter1.2012.html', _1: 'selections from willis plummer\'s twitter (edited by mira gonzalez)'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'http://muumuuhouse.com/vt.twitter.2012-13.html', _1: 'selections from victoria trott\'s twitter (edited by willis plummer)'},
					_1: {ctor: '[]'}
				}
			}
		}
	}
};
var _user$project$Main$prose = {
	ctor: '::',
	_0: {ctor: '_Tuple2', _0: 'https://medium.com/kickstarter/total-party-kill-3898fb82b5fb#.31wxy6hzl', _1: 'total party kill: the architects of dungeons and dragons'},
	_1: {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'http://thoughtcatalog.com/2013/not-even-doom-music-an-interview-with-mat-riviere/', _1: 'not even doom music: an interview with mat riviere'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'http://thoughtcatalog.com/2013/an-interview-with-nytyrant-in-four-parts/', _1: 'an interview with giancarlo ditrapano'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'http://thoughtcatalog.com/2012/my-tweets-almost-got-me-sent-home-from-study-abroad/', _1: 'my tweets almost got me sent home from study abroad'},
				_1: {ctor: '[]'}
			}
		}
	}
};
var _user$project$Main$poetry = {
	ctor: '::',
	_0: {ctor: '_Tuple2', _0: 'http://www.bodegamag.com/articles/172-bros', _1: 'bros (bodega mag)'},
	_1: {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'http://darkfuckingwizard.com/three-poems/', _1: '3 poems (dark fucking wizard)'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'http://muumuuhouse.com/wp.13nov2014.html', _1: '14 haiku (muumuu house)'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'https://preludemag.com/contributors/willis-plummer/', _1: '3 poems (prelude magazine)'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'http://cwp.fas.nyu.edu/object/cwp.ug.lobelprize_plummer', _1: 'good and beautiful (nyu creative writing program)'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'http://www.hobartpulp.com/web_features/5-poems--8', _1: '5 poems (hobartpulp)'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	}
};
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {nav: a, writingLinks: b, projectDescriptions: c, route: d};
	});
var _user$project$Main$Links = F3(
	function (a, b, c) {
		return {poetryLinks: a, proseLinks: b, miscLinks: c};
	});
var _user$project$Main$Project = F3(
	function (a, b, c) {
		return {title: a, description: b, links: c};
	});
var _user$project$Main$UrlChange = function (a) {
	return {ctor: 'UrlChange', _0: a};
};
var _user$project$Main$ShowContact = {ctor: 'ShowContact'};
var _user$project$Main$ShowPortfolio = {ctor: 'ShowPortfolio'};
var _user$project$Main$ShowWriting = {ctor: 'ShowWriting'};
var _user$project$Main$ShowAbout = {ctor: 'ShowAbout'};
var _user$project$Main$initialModel = function (route) {
	return {
		nav: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'About', _1: _user$project$Main$ShowAbout},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'Writing', _1: _user$project$Main$ShowWriting},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'Projects', _1: _user$project$Main$ShowPortfolio},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'Contact', _1: _user$project$Main$ShowContact},
						_1: {ctor: '[]'}
					}
				}
			}
		},
		writingLinks: {poetryLinks: _user$project$Main$poetry, proseLinks: _user$project$Main$prose, miscLinks: _user$project$Main$misc},
		projectDescriptions: _user$project$Main$projects,
		route: route
	};
};
var _user$project$Main$NotFoundRoute = {ctor: 'NotFoundRoute'};
var _user$project$Main$routeFromResult = function (location) {
	var _p11 = location;
	if (_p11.ctor === 'Just') {
		return _p11._0;
	} else {
		return _user$project$Main$NotFoundRoute;
	}
};
var _user$project$Main$ContactRoute = {ctor: 'ContactRoute'};
var _user$project$Main$PortfolioRoute = {ctor: 'PortfolioRoute'};
var _user$project$Main$WritingRoute = {ctor: 'WritingRoute'};
var _user$project$Main$AboutRoute = {ctor: 'AboutRoute'};
var _user$project$Main$route = _evancz$url_parser$UrlParser$oneOf(
	{
		ctor: '::',
		_0: A2(_evancz$url_parser$UrlParser$map, _user$project$Main$AboutRoute, _evancz$url_parser$UrlParser$top),
		_1: {
			ctor: '::',
			_0: A2(
				_evancz$url_parser$UrlParser$map,
				_user$project$Main$AboutRoute,
				_evancz$url_parser$UrlParser$s('about')),
			_1: {
				ctor: '::',
				_0: A2(
					_evancz$url_parser$UrlParser$map,
					_user$project$Main$WritingRoute,
					_evancz$url_parser$UrlParser$s('writing')),
				_1: {
					ctor: '::',
					_0: A2(
						_evancz$url_parser$UrlParser$map,
						_user$project$Main$PortfolioRoute,
						_evancz$url_parser$UrlParser$s('portfolio')),
					_1: {
						ctor: '::',
						_0: A2(
							_evancz$url_parser$UrlParser$map,
							_user$project$Main$ContactRoute,
							_evancz$url_parser$UrlParser$s('contact')),
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _user$project$Main$init = function (location) {
	return {
		ctor: '_Tuple2',
		_0: _user$project$Main$initialModel(
			_user$project$Main$routeFromResult(
				A2(_evancz$url_parser$UrlParser$parseHash, _user$project$Main$route, location))),
		_1: _elm_lang$core$Platform_Cmd$none
	};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p12 = msg;
		switch (_p12.ctor) {
			case 'ShowAbout':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$navigation$Navigation$modifyUrl('#about')
				};
			case 'ShowWriting':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$navigation$Navigation$modifyUrl('#writing')
				};
			case 'ShowPortfolio':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$navigation$Navigation$modifyUrl('#portfolio')
				};
			case 'ShowContact':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$navigation$Navigation$modifyUrl('#contact')
				};
			default:
				var currentRoute = _user$project$Main$routeFromResult(
					A2(_evancz$url_parser$UrlParser$parseHash, _user$project$Main$route, _p12._0));
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{route: currentRoute}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	_user$project$Main$UrlChange,
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
